from functools import reduce
import math


def chinese_remainder(n, a):
  sum = 0
  prod = reduce(lambda a, b: a*b, n)

  for n_i, a_i in zip(n, a):
    p = prod // n_i
    sum += a_i * pow(p, -1, n_i) * p

  return sum % prod

def find_invpow(x,n):
    """Finds the integer component of the n'th root of x,
    an integer such that y ** n <= x < (y + 1) ** n.
    """
    high = 1
    while high ** n <= x:
        high *= 2
    low = high//2
    while low < high:
        mid = (low + high) // 2
        if low < mid and mid**n < x:
            low = mid
        elif high > mid and mid**n > x:
            high = mid
        else:
            return mid
    return mid + 1



n1 = 0x00cd8b19a89bb3c0229bdd1dfac6fbb92ba5ce18bdd3215a83671d27262cff81d4e115d61ac9b7a338e6d246f0899e702f737bff36782cee65923d7c171ef495966e270dacdc858b0edb454dc003d8dd28fe470624f0dc7c5ada3fd2de7b7dc9ca589354d5fbeaf4356a558846a25e961b139009845903b813cbf21fa5f1dd831585669a4e0a13a86ac0a2aed98a94170856ea373e94343472dfa3dd7b09fef34839c2dc201ddeb4aa0c0efc397a658c6e76c2abf605cce55b9633624824250d5cc0ff6083020e55357367b411d2170a0439c6154f718f4d44fe8c48f65602536e65bf7c0ae31faba40a9d68f1935cc8b8f87759e9fb40c7f66c849657eb74db0f
n2 = 0x00cb6535ac5c3a37d8991cdc903c4a60e18fafdf32c8a96aa9dc23a966fd850a87ce5a6039cab2484b70870892b6273e2928026a4c2fe3c456863f485da99a40e055259cd973c6cc1aac41d7f0d849b44ee7abfa09f518d5db51b0274796b89d9ebc892aa28da7a9656f22bc4f0df0e08f09eef6f0af7ab84e69fcb4ec77d32c694e79ab1dd70acaf45ca4a74e5c728815a06e28e89bf30a5aab1e4150cc741db91cf8ab198107b4c08e3e31f18937d4e015e3dae6e54520eecd859a893f7497a8141b07ef956a5bde3d05d44f4a0b7a2dbc1403c71c0f59e5d0f4e3156d9357e2d69e15b5cddccc9f68a2eee7bd343e8b4cdaab3e3c3f27ebce4295557ea11b4f
n3 = 0x00ad20f6f11a51360a802bf0bcbc8c7c14233b3ed6db36d3fda84969bf5b1bcfee6e6370c95586dfdcdb1d3358e352748e0fb6036a07d6d97d4d3801b0e4c2592f26ab3ce4b45760531bc3c9470fce14a8e01864865e36290462668306617313fce41974e45a6e5c3c0f484f01f96e18854e7678663621496c9932b1e76029c8061bd3927e59cd4e1a295f7e63bcb564cdf6104ca240bbb0f09fcd51ef53a4bd928ae39d8a91df04487d6674aef527dd54e8dacb61d24086eed605a0958919120f45d68bb07601bef77e96a8a41860b00a2062e6c4aa0bc5bda9c17230e188a8b151e6abdfc28521019a2d6dc519c5e4929b1b682f2dbcbc216baa4d1b78e7dcfb


m1 = 0x005861f7511ac8221e11f09cd3d5c24268f01ae657f6dca2e03885e6f34a64880208cd4eaa6042fcd84d17196ae7e38e840e7900f1e1a30cac0612a0a288f9d5d9e3115591cb6d22c2762277cf0ef8dbb0eec3899ff5e1d53bb909490accc48caa5f5b7d8082264e19299aff99626b542c191b188dcbf701c2e54761c4bba2c7903ff6c10d6d8387ca65b551d029dc14b0c5b58463c92ac67d9cdec32953da7bcb06d208d3807cf48e33a85669fae5a1c34abc2077107089bf5f9944c641cf915117c6916d0429c8e6bae8cf601ba6572b00ac5507fb9a5739e045cc2209ee11d889ed27ae5e36322cd5b6cf6470fcfead55a30b1c65fb7c934d6eb1eab14143
m2 = 0x67d761a9112b22112086234f6dd24663a11eaf6491b5662e879d1793b338d9743f7a485fbe269f8edc04407cd2d4ef8f01e1dd82b5c370fabafbd2bf4812108afb189470b1e9ef0708417c9f43578397f8e369f8e0b8684077dc7c891ba11db63e1ba9f25d84647f9a000212a814f2f0ecdc27e98b7b8622fccfec37c1c6e17e749ccf642ff2a12372b675a8c7535f3b2ea8191c8f7455e79447f3a5a4cf9cb9f95c2c87e6530697a766103dc398422148e187392aee4f6700405fc2edee26c57b6c4bb8b5bbc832445de25aa938d832be3630797f874e80ca687108e812701a445016f026c47dc0f638c6167c30e865f5a9a511ec860a99b866a4d301c575c8
m3 = 0x57d97872b597c9cd08ac01932e5628a0b28030772a40b615f4b30b20be9e7d410c37995b4e3cf6c9d46afb7c4b157f757632cde0070ec98334ee0cd0ea544c98b17c5553aad6657d023efb89498c0295b7f1af89122bae25dd66d68162f41a7af3795382e6b59e34efdb927c0fd8ea42a5fdc759dbcb904b1bb6e23ae1f635b5aab7ff898a6d3cdfccc19b0ce574be820010dba1cf161a6fbd4482990b283ec35c22fef2aeb6f66f6cc0c7e2ffda16fd776358651fbd31c31db82a7902ec268c63fc6f5039cb01bd16a873b1e644a98114f57005b7a10d19f6b0429787e5c30f20474f62c1d7b2b60f04afb0eedeb7244a57dea8280df15c549d9ff06bfef09f


c4 = chinese_remainder([n1, n2, n3], [m1, m2, m3])
m = find_invpow(c4, 3)

# mot de passe : 44241455a1d4363acc7ce4f36c958145
print(m.to_bytes((m.bit_length() + 7) // 8))
